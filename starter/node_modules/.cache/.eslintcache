[{"/Users/KristinCurry/Dev/FinalProject/starter/src/index.js":"1","/Users/KristinCurry/Dev/FinalProject/starter/src/App.js":"2","/Users/KristinCurry/Dev/FinalProject/starter/src/Search.js":"3","/Users/KristinCurry/Dev/FinalProject/starter/src/Bookshelf.js":"4","/Users/KristinCurry/Dev/FinalProject/starter/src/BooksAPI.js":"5","/Users/KristinCurry/Dev/FinalProject/starter/src/List.js":"6","/Users/KristinCurry/Dev/FinalProject/starter/src/Book.js":"7","/Users/KristinCurry/Dev/FinalProject/starter/src/Menu.js":"8"},{"size":219,"mtime":1662493771095,"results":"9","hashOfConfig":"10"},{"size":548,"mtime":1662500066855,"results":"11","hashOfConfig":"10"},{"size":505,"mtime":1662500556298,"results":"12","hashOfConfig":"10"},{"size":1856,"mtime":1662500004866,"results":"13","hashOfConfig":"10"},{"size":1055,"mtime":1662493771094,"results":"14","hashOfConfig":"10"},{"size":666,"mtime":1662498619771,"results":"15","hashOfConfig":"10"},{"size":1063,"mtime":1662499186591,"results":"16","hashOfConfig":"10"},{"size":643,"mtime":1662500078431,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"nxnq5x",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/KristinCurry/Dev/FinalProject/starter/src/index.js",[],["36","37"],"/Users/KristinCurry/Dev/FinalProject/starter/src/App.js",[],"/Users/KristinCurry/Dev/FinalProject/starter/src/Search.js",[],"/Users/KristinCurry/Dev/FinalProject/starter/src/Bookshelf.js",["38"],"import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport List from \"./List\";\n\nconst Bookshelf = () =>{\n    const currentlyReadingShelfName = \"currentlyReading\";\n    const wantToReadShelfName = \"wantToRead\";\n    const readShelfName = \"read\";\n\n    const [currentlyReading, setCurrentlyReading] = useState([]);\n    const [wantToRead, setWantToRead] = useState([]);\n    const [read, setRead] = useState([]);\n\n    useEffect(()=>{        \n        getAllBooks();\n    }, []);\n\n    const getAllBooks = async () =>{\n        const res = await BooksAPI.getAll();\n        setCurrentlyReading(res.filter((book)=> book.shelf === currentlyReadingShelfName));\n        setWantToRead(res.filter((book)=> book.shelf === wantToReadShelfName));\n        setRead(res.filter((book)=> book.shelf === readShelfName));\n    };\n\n    const updateBook = async (book, shelf) =>{\n        const res = await BooksAPI.update(book, shelf);\n    };\n\n    const onShelfChange = (event, book) =>{\n        var newShelf = event.currentTarget.value;\n        updateBook(book, newShelf);\n        getAllBooks();\n    };\n\n    return <div className=\"list-books\">\n        <div className=\"list-books-title\">\n            <h1>MyReads</h1>\n        </div>\n        <div className=\"list-books-content\">\n            <div className=\"bookshelf\">\n                <List title=\"Currently Reading\" books={currentlyReading} onShelfChange={onShelfChange}></List>\n                <List title=\"Want To Read\" books={wantToRead} onShelfChange={onShelfChange}></List>\n                <List title=\"Read\" books={read} onShelfChange={onShelfChange}></List>\n                <div className=\"open-search\">\n                    <Link to=\"/search\">Add a book</Link>\n                </div>\n            </div>\n        </div>\n    </div>\n};\n\nexport default Bookshelf;","/Users/KristinCurry/Dev/FinalProject/starter/src/BooksAPI.js",[],"/Users/KristinCurry/Dev/FinalProject/starter/src/List.js",[],"/Users/KristinCurry/Dev/FinalProject/starter/src/Book.js",[],"/Users/KristinCurry/Dev/FinalProject/starter/src/Menu.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":27,"column":15,"nodeType":"45","messageId":"46","endLine":27,"endColumn":18},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]